{"version":3,"sources":["App.tsx","components/ErrorPage/ErrorPage.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","role","to","ErrorPage","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","json","Error","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","selectedPerson","map","born","died","motherName","undefined","mother","fatherName","father","PeoplePage","useState","setPeople","isLoading","setIsloading","isError","setIsError","useParams","useEffect","peopleFromServer","newPerson","find","getParents","catch","finally","length","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e7604644.chunk.js","sourcesContent":["import './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>Home</NavLink>\n          <NavLink to=\"/people\" className={getLinkClass}>People</NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","export const ErrorPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error('Error');\n    });\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n  selectedPerson: Person | undefined;\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedPerson }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map((person) => {\n        return (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': selectedPerson?.slug === person.slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.motherName ? (\n                <>\n                  {person.mother !== undefined ? (\n                    <PersonLink person={person.mother} />\n                  ) : (\n                    person.motherName\n                  )}\n                </>\n              ) : (\n                '-'\n              )}\n            </td>\n            <td>\n              {person.fatherName ? (\n                <>\n                  {person.father !== undefined ? (\n                    <PersonLink person={person.father} />\n                  ) : (\n                    person.fatherName\n                  )}\n                </>\n              ) : (\n                '-'\n              )}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsloading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  const { slug } = useParams();\n\n  function getParents(peopleFromServer: Person[]) {\n    const peopleWithParents = peopleFromServer.map((person) => {\n      const newPerson = { ...person };\n\n      newPerson.father = peopleFromServer\n        .find(father => father.name === newPerson.fatherName);\n\n      newPerson.mother = peopleFromServer\n        .find(mother => mother.name === newPerson.motherName);\n\n      return newPerson;\n    });\n\n    return peopleWithParents;\n  }\n\n  useEffect(() => {\n    setIsloading(true);\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(getParents(peopleFromServer));\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsloading(false));\n  }, []);\n\n  const selectedPerson = people.find((person) => person.slug === slug);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <h1 className=\"title\">People Page</h1>\n\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <>\n            {isError ? (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            ) : (\n              <>\n                {!people.length ? (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                ) : (\n                  <PeopleTable\n                    people={people}\n                    selectedPerson={selectedPerson}\n                  />\n                )}\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","import {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { ErrorPage } from './components/ErrorPage/ErrorPage';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n      </Route>\n      <Route path=\"*\" element={<ErrorPage />} />\n    </Routes>\n\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}